server
{
    listen 5051;
    server_name 14.103.133.62;
    index index.html index.htm default.htm default.html;
    root /www/wwwroot/tiku;
    #CERT-APPLY-CHECK--START
    # 用于SSL证书申请时的文件验证相关配置 -- 请勿删除
    include /www/server/panel/vhost/nginx/well-known/tiku.conf;
    #CERT-APPLY-CHECK--END

    #SSL-START SSL相关配置
    #error_page 404/404.html;

    #SSL-END

    #ERROR-PAGE-START  错误页相关配置
    #error_page 404 /404.html;
    #error_page 502 /502.html;
    #ERROR-PAGE-END


    #REWRITE-START 伪静态相关配置
    include /www/server/panel/vhost/rewrite/python_tiku.conf;
    #REWRITE-END

    #禁止访问的文件或目录
    location ~ ^/(\.user.ini|\.htaccess|\.git|\.svn|\.project|LICENSE|README.md|package.json|package-lock.json|\.env) {
        return 404;
    }

    #一键申请SSL证书验证目录相关设置
    location /.well-known/ {
        root /www/wwwroot/java_node_ssl;
    }

    #禁止在证书验证目录放入敏感文件
    if ( $uri ~ "^/\.well-known/.*\.(php|jsp|py|js|css|lua|ts|go|zip|tar\.gz|rar|7z|sql|bak)$" ) {
        return 403;
    }

    # HTTP反向代理相关配置开始 >>>
    location ~ /purge(/.*) {
        proxy_cache_purge cache_one 127.0.0.1$request_uri$is_args$args;
    }

    # proxy
    # 主要的反向代理配置
    location / {
        proxy_pass http://127.0.0.1:8000; # **注意这里是 Flask 内部监听的 8000 端口**
        proxy_set_header Host $host; # 保持请求的 Host 头不变
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme; # 如果使用 HTTPS，这里会传递 scheme
        proxy_connect_timeout 30s;
        proxy_read_timeout 86400s; # 增加读取超时，防止大文件上传或长时间处理的API超时
        proxy_send_timeout 30s;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade; # 针对 WebSocket 升级
        proxy_set_header Connection "upgrade"; # 针对 WebSocket 升级
        add_header X-Cache $upstream_cache_status; # 调试 Nginx 缓存状态
    }

    access_log /www/wwwlogs/tiku_backend_access.log; # 独立日志
    error_log /www/wwwlogs/tiku_backend_error.log; # 独立日志

    #Monitor-Config-Start 网站监控报表日志发送配置
    access_log syslog:server=unix:/tmp/bt-monitor.sock,nohostname,tag=5__access monitor;
    error_log syslog:server=unix:/tmp/bt-monitor.sock,nohostname,tag=5__error;
    #Monitor-Config-End
}